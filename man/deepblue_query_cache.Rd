% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deepblue.R
\name{deepblue_query_cache}
\alias{deepblue_query_cache}
\title{query_cache}
\usage{
deepblue_query_cache(query_id = NULL, cache = NULL,
  user_key = deepblue_options("user_key"))
}
\arguments{
\item{query_id}{- A string (Query ID)}

\item{cache}{- A boolean (set or unset this query caching)}

\item{user_key}{- A string (users token key)}
}
\value{
information - A string (New query ID.)
}
\description{
Cache a query result in DeepBlue memory. This command is useful when the same query ID is used multiple times in different requests. The command is an advice for DeepBlue to cache the query result and there is no guarantee that this query data access will be faster.
}
\examples{
annotation_id = deepblue_select_annotations(
    annotation_name="CpG Islands",
    genome="hg19", chromosome="chr1")
data_id = deepblue_select_experiments(
    experiment_name="E002-H3K9ac.narrowPeak.bed")
merged_regions = deepblue_merge_queries(
    query_a_id = annotation_id,
    query_b_id = data_id)
deepblue_query_cache(
    query_id = merged_regions, cache = TRUE)

}
\seealso{
Other Operating on the data regions: \code{\link{deepblue_aggregate}},
  \code{\link{deepblue_binning}},
  \code{\link{deepblue_count_regions}},
  \code{\link{deepblue_coverage}},
  \code{\link{deepblue_distinct_column_values}},
  \code{\link{deepblue_extend}},
  \code{\link{deepblue_filter_regions}},
  \code{\link{deepblue_flank}},
  \code{\link{deepblue_get_experiments_by_query}},
  \code{\link{deepblue_get_regions}},
  \code{\link{deepblue_input_regions}},
  \code{\link{deepblue_intersection}},
  \code{\link{deepblue_merge_queries}},
  \code{\link{deepblue_overlap}},
  \code{\link{deepblue_query_experiment_type}},
  \code{\link{deepblue_score_matrix}},
  \code{\link{deepblue_select_annotations}},
  \code{\link{deepblue_select_experiments}},
  \code{\link{deepblue_select_regions}},
  \code{\link{deepblue_tiling_regions}}
}
